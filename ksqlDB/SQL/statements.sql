SET 'auto.offset.reset' = 'earliest';
CREATE STREAM ORDERS WITH (KAFKA_TOPIC='mysql-debezium-asgard.demo.ORDERS', VALUE_FORMAT='AVRO');

/* Filter fields from STREAM ORDERS*/
SET 'auto.offset.reset' = 'earliest';
SELECT ID, MAKE, MODEL, CREATE_TS FROM ORDERS WHERE MAKE='Ford' EMIT CHANGES;

/* AGGREGATES */

/* Count the number of orders by MAKE */
SELECT MAKE, COUNT(*), SUM(CAST(ORDER_TOTAL_USD AS DECIMAL(13,2)))
  FROM ORDERS
  GROUP BY MAKE EMIT CHANGES;

SELECT TIMESTAMPTOSTRING(WINDOWSTART,'HH:mm:ssZ','Europe/Brussels') AS WINDOW_START_TS,
       MAKE, COUNT(*) AS ORDER_COUNT, SUM(CAST(ORDER_TOTAL_USD AS DECIMAL(13,2))) AS TOTAL_VALUE_USD
  FROM ORDERS WINDOW TUMBLING (SIZE 5 MINUTES)
  WHERE MAKE='Ford'
  GROUP BY MAKE EMIT CHANGES;

CREATE TABLE ORDERS_BY_HOUR AS
    SELECT TIMESTAMPTOSTRING(WINDOWSTART,'yyyy-MM-dd''T''HH:mm:ssZ','Europe/London') AS WINDOW_START_TS,
           MAKE, COUNT(*) AS ORDER_COUNT, SUM(ORDER_TOTAL_USD) AS TOTAL_VALUE_USD
      FROM ORDERS WINDOW TUMBLING (SIZE 1 HOUR)
      GROUP BY MAKE EMIT CHANGES;

-- Push query
SELECT TIMESTAMPTOSTRING(WINDOWSTART,'HH:mm:ssZ','Europe/Brussels') AS TS, MAKE, ORDER_COUNT, TOTAL_VALUE_USD
  FROM ORDERS_BY_HOUR
  WHERE ROWKEY='Ford'
  EMIT CHANGES;

-- Pull query
SELECT TIMESTAMPTOSTRING(WINDOWSTART,'HH:mm:ssZ','Europe/Brussels') AS TS, MAKE, ORDER_COUNT, TOTAL_VALUE_USD
  FROM ORDERS_BY_HOUR
  WHERE ROWKEY='Ford';

CREATE STREAM HIGH_VALUE_ORDERS WITH (KAFKA_TOPIC='HIGH_VALUE_ORDERS', PARTITIONS=6, REPLICAS=1) AS SELECT
  *,
  UCASE(ORDERS.DELIVERY_CITY) CITY,
  UCASE(ORDERS.DELIVERY_COMPANY) COMPANY,
  ORDERS.ORDER_TOTAL_USD VALUE
FROM ORDERS ORDERS
WHERE (ORDERS.ORDER_TOTAL_USD > 100000)
EMIT CHANGES;

CREATE TABLE ORDERS_BY_DAY WITH (KAFKA_TOPIC='ORDERS_BY_DAY', PARTITIONS=1, REPLICAS=1) AS SELECT
  TIMESTAMPTOSTRING(WINDOWSTART, 'yyyy-MM-dd''T''HH:mm:ssZ', 'GMT') WINDOW_START_TS,
  ORDERS.MAKE MAKE,
  COUNT(*) ORDER_COUNT,
  SUM(ORDERS.ORDER_TOTAL_USD) TOTAL_VALUE_USD
FROM ORDERS ORDERS
WINDOW TUMBLING ( SIZE 24 HOURS ) 
GROUP BY ORDERS.MAKE
EMIT CHANGES;

CREATE TABLE AVERAGE_VALUE WITH (KAFKA_TOPIC='AVERAGE_VALUE', PARTITIONS=1, REPLICAS=1, VALUE_FORMAT='AVRO') AS SELECT
  ORDERS.MAKE MAKE,
  AVG(ORDERS.ORDER_TOTAL_USD) USD_RATE
FROM ORDERS ORDERS
GROUP BY ORDERS.MAKE
EMIT CHANGES;

CREATE TABLE ORDERS_BY_HOUR WITH (KAFKA_TOPIC='ORDERS_BY_HOUR', PARTITIONS=1, REPLICAS=1) AS SELECT
  TIMESTAMPTOSTRING(WINDOWSTART, 'yyyy-MM-dd''T''HH:mm:ssZ', 'GMT') WINDOW_START_TS,
  ORDERS.MAKE MAKE,
  COUNT(*) ORDER_COUNT,
  SUM(ORDERS.ORDER_TOTAL_USD) TOTAL_VALUE_USD
FROM ORDERS ORDERS
WINDOW TUMBLING ( SIZE 1 HOURS ) 
GROUP BY ORDERS.MAKE
EMIT CHANGES;

CREATE TABLE HIGH_VALUE_ORDERS_BY_DAY WITH (KAFKA_TOPIC='HIGH_VALUE_ORDERS_BY_DAY', PARTITIONS=6, REPLICAS=1) AS SELECT
  TIMESTAMPTOSTRING(WINDOWSTART, 'yyyy-MM-dd''T''HH:mm:ssZ', 'GMT') WINDOW_START_TS,
  HIGH_VALUE_ORDERS.MAKE MAKE,
  COUNT(*) ORDER_COUNT,
  SUM(HIGH_VALUE_ORDERS.ORDER_TOTAL_USD) TOTAL_VALUE_USD
FROM HIGH_VALUE_ORDERS HIGH_VALUE_ORDERS
WINDOW TUMBLING ( SIZE 24 HOURS ) 
GROUP BY HIGH_VALUE_ORDERS.MAKE
EMIT CHANGES;

CREATE TABLE HIGH_VALUE_ORDERS_BY_HOUR WITH (KAFKA_TOPIC='HIGH_VALUE_ORDERS_BY_HOUR', PARTITIONS=1, REPLICAS=1) AS SELECT
  TIMESTAMPTOSTRING(WINDOWSTART, 'yyyy-MM-dd''T''HH:mm:ssZ', 'Europe/London') WINDOW_START_TS,
  HIGH_VALUE_ORDERS.MAKE MAKE,
  COUNT(*) ORDER_COUNT,
  SUM(HIGH_VALUE_ORDERS.ORDER_TOTAL_USD) TOTAL_VALUE_USD
FROM HIGH_VALUE_ORDERS HIGH_VALUE_ORDERS
WINDOW TUMBLING ( SIZE 1 HOURS ) 
GROUP BY HIGH_VALUE_ORDERS.MAKE
EMIT CHANGES;